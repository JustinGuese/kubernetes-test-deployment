apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgresql
  name: postgresql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql-app
  name: postgresql-app
  annotations:
    backup.velero.io/backup-volumes: postgresql-pv
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: postgresql-app
  template:
    metadata:
      labels:
        app: postgresql-app
    spec:
      containers:
        - env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: psql-password
                  key: POSTGRES_PASSWORD
          image: postgres:14-alpine
          imagePullPolicy: Always
          name: postgresql-app
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "50Mi"
              cpu: 50m
            limits:
              memory: "500Mi"
              cpu: 1000m
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-pv
      restartPolicy: Always
      volumes:
        - name: postgresql-pv
          persistentVolumeClaim:
            claimName: postgresql-pvc
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgresql
  name: postgres-service
spec:
  ports:
    - name: "postgres"
      port: 5432
      targetPort: 5432
  selector:
    app: postgresql-app